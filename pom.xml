<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>co.aisystem</groupId>
	<artifactId>demoJooq</artifactId>
	<version>0.0.1-SNAPSHOT</version>
    <modules>
        <module>demoHibernate</module>
    </modules>
    <packaging>pom</packaging>

	<name>demoJooq</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.0.M5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>

		<db.driver>org.postgresql.Driver</db.driver>
		<db.url>jdbc:postgresql://localhost:5432/crm</db.url>
		<db.username>postgres</db.username>
		<api.db>co.aisystem.demoJooq.api.db</api.db>
		<db.password></db.password>
		<jooq.generator.db.dialect>org.jooq.util.postgres.PostgresDatabase</jooq.generator.db.dialect>
		<jooq.generated.source>${basedir}/gensrc/main/java</jooq.generated.source>

	</properties>

	<dependencies>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>5.0.0.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.2</version>
		</dependency>
		<!--<dependency>-->
			<!--<groupId>com.h2database</groupId>-->
			<!--<artifactId>h2</artifactId>-->
			<!--<scope>runtime</scope>-->
		<!--</dependency>-->
		<!--<dependency>-->
			<!--<groupId>org.postgresql</groupId>-->
			<!--<artifactId>postgresql</artifactId>-->
			<!--<scope>runtime</scope>-->
		<!--</dependency>-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<!-- Includes spring's support classes for quartz -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		<!--<dependency>-->
			<!--<groupId>org.liquibase</groupId>-->
			<!--<artifactId>liquibase-core</artifactId>-->
			<!--<version>3.5.3</version>-->
		<!--</dependency>-->

		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.3.0</version>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.1.4</version>
		</dependency>


		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.9.1</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${jooq.generated.source}</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<!--<version>${jooq.version}</version>-->

				<configuration>
					<jdbc>
						<driver>${db.driver}</driver>
						<url>${db.url}</url>
						<user>${db.username}</user>
						<password>${db.password}</password>
					</jdbc>
					<generator>
						<name>org.jooq.util.JavaGenerator</name>
						<database>
							<!-- First, register your custom types here -->
							<customTypes>
								<customType>
									<!-- Specify the name of your custom type. Avoid using names from org.jooq.impl.SQLDataType -->
									<name>JsonElement</name>

									<!-- Specify the Java type of your custom type. This corresponds to the Binding's <U> type. -->
									<type>com.google.gson.JsonElement</type>

									<!-- Associate that custom type with your binding. -->
									<binding> co.aisystem.demoJooq.converters.PostgresJSONGsonBinding</binding>
								</customType>
							</customTypes>

							<!-- Then, associate custom types with database columns -->
							<forcedTypes>
								<forcedType>
									<!-- Specify the name of your custom type -->
									<name>JsonElement</name>

									<!-- Add a Java regular expression matching fully-qualified columns. Use the pipe to separate several expressions.

                                         If provided, both "expressions" and "types" must match. -->
									<expression>.*JSON.*</expression>

									<!-- Add a Java regular expression matching data types to be forced to
                                         have this type.

                                         Data types may be reported by your database as:
                                         - NUMBER              regexp suggestion: NUMBER
                                         - NUMBER(5)           regexp suggestion: NUMBER\(5\)
                                         - NUMBER(5, 2)        regexp suggestion: NUMBER\(5,\s*2\)
                                         - any other form

                                         It is thus recommended to use defensive regexes for types.

                                         If provided, both "expressions" and "types" must match. -->
									<types>.*</types>
								</forcedType>
							</forcedTypes>


							<name>${jooq.generator.db.dialect}</name>
							<includes>.*</includes>
							<includeSequences>false</includeSequences>

							<inputSchema>public</inputSchema>
							<!--<schemata>-->
								<!--<schema>-->
									<!--<inputSchema>public</inputSchema>-->
								<!--</schema>-->
							<!--</schemata>-->
						</database>
						<generate>
							<deprecated>false</deprecated>
							<pojos>false</pojos>
							<immutablePojos>false</immutablePojos>
							<generatedAnnotation>false</generatedAnnotation>
							<records>true</records>
							<daos>false</daos>
							<jpaAnnotations>false</jpaAnnotations>
						</generate>
						<target>
							<packageName>${api.db}</packageName>
							<directory>${jooq.generated.source}</directory>
						</target>
					</generator>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>


</project>
